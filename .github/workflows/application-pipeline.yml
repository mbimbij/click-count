name: click-count pipeline
on: [push]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      imageName: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.8.4
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: build .war artifact
        run: mvn clean package
      - name: Log in to the Container registry
        uses: docker/login-action@v1.12.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.8.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  staging:
    needs:
      - build
    uses: ./.github/workflows/deploy.yml
    with:
      environment: staging
      image_fullname: ${{ needs.build.outputs.imageName }}
    secrets:
      application_name: ${{ secrets.APPLICATION_NAME }}
      aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      aws_region: ${{ secrets.AWS_REGION }}

  production:
    needs:
      - build
      - staging
    uses: ./.github/workflows/deploy.yml
    with:
      environment: production
      image_fullname: ${{ needs.build.outputs.imageName }}
    secrets:
      application_name: ${{ secrets.APPLICATION_NAME }}
      aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      aws_region: ${{ secrets.AWS_REGION }}
