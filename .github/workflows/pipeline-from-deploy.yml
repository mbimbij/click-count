name: Deploy only
on: [push]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      application: ${{ steps.filter.outputs.application }}
      deploy: ${{ steps.filter.outputs.deploy }}
      imageName: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.latest_docker_tag.outputs.docker_tag }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            application:
              - 'src/**'
              - 'pom.xml'
            deploy:
              - 'deploy/**'
      - name: Get latest Docker tag
        id: latest_docker_tag
        run: |
          echo ::set-output name=docker_tag::"$(curl -s -H 'Authorization: Token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/users/mbimbij/packages/container/click-count/versions | jq -r '.[0].metadata.container.tags[0]')"

  staging:
    needs: changes
    if: ${{ needs.changes.outputs.deploy == 'true' }}
    uses: ./.github/workflows/deploy.yml
    with:
      environment: staging
      image_fullname: ${{ needs.changes.outputs.imageName }}
    secrets:
      application_name: ${{ secrets.APPLICATION_NAME }}
      aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      aws_region: ${{ secrets.AWS_REGION }}

  production:
    needs:
      - staging
    uses: ./.github/workflows/deploy.yml
    with:
      environment: production
      image_fullname: ${{ needs.changes.outputs.imageName }}
    secrets:
      application_name: ${{ secrets.APPLICATION_NAME }}
      aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      aws_region: ${{ secrets.AWS_REGION }}
